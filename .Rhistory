store
store <-Sudoku.Solve(unsolved.matrix5,2000)
store <-Sudoku.Solve(unsolved.matrix4,2000)
store
store <-Sudoku.Solve(unsolved.matrix5,10000)
store
source('F:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
source('F:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
store <-Sudoku.Solve(unsolved.matrix5,1000)
store
store <-Sudoku.Solve(unsolved.matrix3,1000)
store
store <-Sudoku.Solve(unsolved.matrix1,1000)
store
store <-Sudoku.Solve(unsolved.matrix1,1000)
store
source('F:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
store <-Sudoku.Solve(unsolved.matrix2,1000)
store
store <-Sudoku.Solve(unsolved.matrix1,1000)
store
store <-Sudoku.Solve(unsolved.matrix1,2000)
store
store <-Sudoku.Solve(unsolved.matrix1,20000)
store
store <-Sudoku.Solve(unsolved.matrix1,40000)
store
save.image("F:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/soduku.RData")
load("C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/soduku.RData")
Sudoku.Solve(unsolved.matrix1)
Sudoku.Solve(unsolved.matrix1,500)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix1,500)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix1,500)
Sudoku.Solve(unsolved.matrix1,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix1,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix1,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SudokuComplex.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix1,700)
Sudoku.Solve(unsolved.matrix2,700)
Sudoku.Solve(unsolved.matrix3,700)
Sudoku.Solve(unsolved.matrix4,700)
Sudoku.Solve(unsolved.matrix4,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,700)
apply(unsolved.matrix4,2,function(x){recurs[i]%in%x})
apply(unsolved.matrix4,2,function(x){1%in%x})
apply(unsolved.matrix4,2,function(x){2%in%x})
apply(unsolved.matrix4,2,function(x){3%in%x})
all(apply(unsolved.matrix4,2,function(x){3%in%x}))
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,700)
Sudoku.Solve(unsolved.matrix5,700)
Sudoku.Solve(unsolved.matrix5,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SudokuComplex.R', echo=TRUE)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix5,700)
Sudoku.Solve(unsolved.matrix5,700)
Sudoku.Solve(unsolved.matrix5,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix5,700)
Sudoku.Solve(unsolved.matrix4,700)
Sudoku.Solve(unsolved.matrix4,700)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SudokuComplex.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,700)
Sudoku.Solve(unsolved.matrix5,700)
Sudoku.Solve(unsolved.matrix5,10000)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix5,10000)
Sudoku.Solve(unsolved.matrix4,10000)
Sudoku.Solve(unsolved.matrix4,1000,5)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,1000,5)
Sudoku.Solve(unsolved.matrix4,1000,9)
Sudoku.Solve(unsolved.matrix4,1000,3)
Sudoku.Solve(unsolved.matrix1,1000,3)
Sudoku.Solve(unsolved.matrix2,1000,3)
col1 col2 col3 col4 col5 col6 col7 col8 col9
[1,]    6    4    5    3    2    7    1    9    8
[2,]    8    3    1    9    5    6    4    2    7
[3,]    9    7    2    4    1    8    5    6    3
[4,]    4    8    6    1    9    5    3    7    2
[5,]    5    1    9    8    7    3    2    4    6
[6,]    7    5    3    2    6    4    9    8    1
[7,]    3    6    7    5    4    2    8    1    9
[8,]    2    9    4    7    8    1    6    3    5
[9,]    1    2    8    6    3    9    7    5    4
c(      col1 col2 col3 col4 col5 col6 col7 col8 col9
[1,]    6    4    5    3    2    7    1    9    8
[2,]    8    3    1    9    5    6    4    2    7
[3,]    9    7    2    4    1    8    5    6    3
[4,]    4    8    6    1    9    5    3    7    2
[5,]    5    1    9    8    7    3    2    4    6
[6,]    7    5    3    2    6    4    9    8    1
[7,]    3    6    7    5    4    2    8    1    9
[8,]    2    9    4    7    8    1    6    3    5
[9,]    1    2    8    6    3    9    7    5    4)
testmatrix <- edit(mat.or.vec(9,9))
hypothesistest1 <- apply(testmatrix,2,function(x){any(table(x)[names(table(x))!=0]>1)})
hypothesistest2 <- apply(testmatrix,1,function(x){any(table(x)[names(table(x))!=0]>1)})
hypothesistest1
hypothesistest2
testmatrix
mat <- unsolved.matrix1
stopifnot(ncol(mat)==nrow(mat),is.numeric(mat),ncol(mat)%%3==0,all(mat<10),all(mat>=0))
nboxes <- (ncol(mat)/3)*(nrow(mat)/3)
boxind <- vector("list",nboxes)
begrw <- rep(seq(1,ncol(mat),3),3)
begcl <- rep(begrw,each=3)
for(i in 1:length(boxind)){
rw <- boxind[[i]][,1];cl <- boxind[[i]][,2]
boxfill[i] <- sum(!is.na(mat[rw,cl])&mat[rw,cl]>0&mat[rw,cl]<10&is.numeric(mat[rw,cl]))
boxind[[i]] <- matrix(c(begrw[i]:(begrw[i]+2),begcl[i]:(begcl[i]+2)),3,2)
}
boxfill <- mat.or.vec(nboxes,1)
boxnam <- 1:nboxes
nboxes <- (ncol(mat)/3)*(nrow(mat)/3)
boxind <- vector("list",nboxes)
boxfill <- mat.or.vec(nboxes,1)
begrw <- rep(seq(1,ncol(mat),3),3)
begcl <- rep(begrw,each=3)
for(i in 1:length(boxind)){
boxind[[i]] <- matrix(c(begrw[i]:(begrw[i]+2),begcl[i]:(begcl[i]+2)),3,2)
rw <- boxind[[i]][,1];cl <- boxind[[i]][,2]
boxfill[i] <- sum(!is.na(mat[rw,cl])&mat[rw,cl]>0&mat[rw,cl]<10&is.numeric(mat[rw,cl]))
}
boxnam <- 1:nboxes
boxind <- matrix(unlist(boxind),6,nboxes)
colnames(boxind) <- boxnam
row.names(boxind) <- rep(1:2,each=3)
boxind
boxfill
nboxes <- (ncol(mat)/3)*(nrow(mat)/3)
boxind <- vector("list",nboxes)
boxfill <- mat.or.vec(nboxes,1)
begrw <- rep(seq(1,ncol(mat),3),3)
begcl <- rep(begrw,each=3)
for(i in 1:length(boxind)){
boxind[[i]] <- matrix(c(begrw[i]:(begrw[i]+2),begcl[i]:(begcl[i]+2)),3,2)
rw <- boxind[[i]][,1];cl <- boxind[[i]][,2]
boxfill[i] <- sum(!is.na(mat[rw,cl])&mat[rw,cl]>0&mat[rw,cl]<10&is.numeric(mat[rw,cl]))
}
boind
boxind
memo
memo <- data.frame(row=c(rep(rep(1:3,each=3),times=3),rep(rep(4:6,each=3),times=3),rep(rep(7:9,each=3),times=3)),column=c(rep(1:3,3),rep(4:6,3),rep(7:9,3)),boxID=rep(1:nboxes,each=nboxes),matrix(TRUE,nrow(mat)*ncol(mat),9))
memo
for(i in 1:nboxes){
rwcl <- memo[memo$boxID==i,1:2]
apply(rwcl,2,function(x){tans$mat[x[,1],x[,2]]})
}
for(i in 1:nboxes){
rwcl <- memo[memo$boxID==i,1:2]
apply(rwcl,2,function(x){testmatrix[x[,1],x[,2]]})
}
i <- i
rwcl <- memo[memo$boxID==i,1:2]
rwcl
dim(rwcl)
for(i in 1:nboxes){
rwcl <- memo[memo$boxID==i,1:2]
apply(rwcl,2,function(x){testmatrix[x$row,x$column]})
}
for(i in 1:nboxes){
rwcl <- memo[memo$boxID==i,1:2]
apply(rwcl,2,function(x){testmatrix[x[1],x[2]})
}
for(i in 1:nboxes){
rwcl <- memo[memo$boxID==i,1:2]
apply(rwcl,2,function(x){testmatrix[x[1],x[2]]})
}
for(i in 1:nboxes){
rwcl <- memo[memo$boxID==i,1:2]
print(apply(rwcl,2,function(x){testmatrix[x[1],x[2]]}))
}
i <-
1
rwcl <- memo[memo$boxID==i,1:2]
apply(rwcl,2,function(x){testmatrix[x[1],x[2]]})
rwcl
testmatrix
apply(rwcl,1,function(x){testmatrix[x[1],x[2]]})
p
any(table(apply(rwcl,1,function(x){testmatrix[x[1],x[2]]}))>1)
hypothesistest3 <- sapply(1:nboxes,function(z){
rwcl <- memo[memo$boxID==z,1:2]
any(table(apply(rwcl,1,function(x){testmatrix[x[1],x[2]]}))>1)
}
})
hypothesistest3 <- sapply(1:nboxes,function(z){
rwcl <- memo[memo$boxID==z,1:2]
any(table(apply(rwcl,1,function(x){testmatrix[x[1],x[2]]}))>1)
})
hypothesistest3
testmatrix
Sudoku.Solve(unsolved.matrix4,1000,9)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,1000,9)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,1000,9)
source('C:/Users/timo/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix4,1000,9)
Sudoku.Solve(unsolved.matrix5,3000,9)
Sudoku.Solve(unsolved.matrix2,3000,9)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SudokuComplex.R')
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R')
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/updatememo.R')
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/VisualizeSudoku.r')
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SodokuSimple.R')
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/getDevTitle.r')
unsolved.matrix1
Sudoku.Solve(unsolved.matrix1,500,visualize=T)
Sudoku.Solve(unsolved.matrix6,500,visualize=T)
Sudoku.Solve(unsolved.matrix3,500,visualize=T)
load("E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.RData")
answer
rm(answer)
rm(Sudoku.Complex)
rm(Sudoku.Simple)
Sudoku.Simple
Sudoku.Simple
load("E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.RData")
rm*wait
wait
rm(wait)
rm(updatememo)
rm(Sudoku.Solve)
rm(Sudoku.Complex)
rm(Sudoku.Simple)
rm(Visualize.Sudoku)
rm(getTtitle)
rm(getTitle)
rm(Sudoku.ComplexSolve)
rm(Sudoku.SimplSolve)
rm(Sudoku.SimpleSolve)
rm(answer)
source('E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/VisualizeSudoku.r', echo=TRUE)
source('E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/updatememo.R', echo=TRUE)
source('E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
source('E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SodokuSimple.R', echo=TRUE)
source('E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/getDevTitle.r', echo=TRUE)
source('E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SudokuComplex.R', echo=TRUE)
answer <- Sudoku.Solve(unsolved.matrix1,500)
answer
Solved.matrix1 <- answer$solution
solved.matrix1 <- answer$Solution
solved.matrix2 <- Sudoku.Solve(unsolved.matrix2,5000)
solved.matrix3 <- Sudoku.Solve(unsolved.matrix3,5000)$Solution
solved.matrix2 <- solved.matrix2$Solution
solved.matrix4 <- Sudoku.Solve(unsolved.matrix4,5000)$Solution
solved.matrix5 <- Sudoku.Solve(unsolved.matrix5,5000)$Solution
solved.matrix6 <- Sudoku.Solve(unsolved.matrix6,5000)$Solution
solved.matrix7 <- Sudoku.Solve(unsolved.matrix7,5000)$Solution
View(solved.matrix7)
View(unsolved.matrix7)
rm(Solved.matrix1,answer)
save.image("E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.RData")
rm(wait)
rm(updatememo)
rm(Sudoku.Solve)
rm(Visualize.Sudoku)
rm(getTitle)
rm(Sudoku.ComplexSolve)
rm(Sudoku.SimplSolve)
rm(Sudoku.SimpleSolve)
save.image("E:/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SudokuMatrices.RData")
ls()
unsolved.matrix8 <- edit()
unsolved.matrix8 <- edit(mat.or.vec(9,9)
)
unsolved.matrix8
dir()
source('SodukuSimple.R')
source('SodokuSimple.R')
source('getDevTitle.R')
source('Sudoku.R')
source('SudokuComplex.R')
source('updatememo.R')
source('VisualizeSudoku.R')
Sudoku.Solve(unsolved.matrix8,2000,visualize=F)
unsolved.matrix8
Sudoku.Solve(unsolved.matrix8,2000,visualize=F)
Sudoku.Solve(unsolved.matrix8,5000,visualize=F)
Sudoku.Solve(unsolved.matrix8,5000,visualize=T)
q()
Sudoku.Solve(unsolved.matrix1,500,visualize=F)
Sudoku.Solve(unsolved.matrix1,500,visualize=T)
Sudoku.Solve(unsolved.matrix1,500,visualize=T)
Sudoku.Solve(unsolved.matrix4,500,visualize=F)
Sudoku.Solve(unsolved.matrix6,1000,visualize=F)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SudokuComplex.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/updatememo.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SodokuSimple.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/getDevTitle.r', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/VisualizeSudoku.r', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
unsolved.matrix.metro14102016 <- mat.or.vec(9,9)
edit(unsolvedmatrix.metro14102016)
edit(unsolved.matrix.metro14102016)
edit(unsolved.matrix.metro14102016)
unsolved.matrix.metro14102016<-edit(unsolved.matrix.metro14102016)
unsolved.matrix.metro14102016
save.image("C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/soduku.RData")
load("C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/SudokuMatrices.RData")
load("C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/soduku.RData")
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=F)
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=T)
unsolved.matrix.metro14102016<-edit(unsolved.matrix.metro14102016)
unsolved.matrix.metro14102016<-data.frame(unsolved.matrix.metro14102016)
unsolved.matrix.metro14102016<-edit(unsolved.matrix.metro14102016)
class(unsolved.matrix.metro14102016)
unsolved.matrix.metro14102016[2,7] <- "a"
unsolved.matrix.metro14102016[4,8] <- "b"
unsolved.matrix.metro14102016
unsolved.matrix.metro14102016<-edit(unsolved.matrix.metro14102016)
unsolved.matrix.metro14102016
mat <- unsolved.matrix.metro14102016
stopifnot((is.matrix(mat)||is.data.frame(mat)),is.numeric(mat),ncol(mat)==nrow(mat),sqrt(ncol(mat))%%1==0)
stopifnot((is.matrix(mat)||is.data.frame(mat)),ncol(mat)==nrow(mat),sqrt(ncol(mat))%%1==0)
is.data.frame(mat)
apply(mat,2,function(x){tm <- grep("[a-z]||[A-Z]",x);markrow <<- markrow+1;return(c(tm,markrow))})
markrow <- 0
apply(mat,2,function(x){tm <- grep("[a-z]||[A-Z]",x);markrow <<- markrow+1;return(c(tm,markrow))})
apply(mat,1,function(x){tm <- grep("[a-z]||[A-Z]",x);markrow <<- markrow+1;return(c(tm,markrow))})
mat
grep("[a-z]||[A-Z]",mat[2,])
grep("[a-z]",mat[2,])
markrow <- 0
apply(mat,1,function(x){tm <- grep("[a-z]",x);markrow <<- markrow+1;return(c(tm,markrow))})
markrow <- 0
apply(mat,1,function(x){tm <- NA;tm <- grep("[a-z]",x);markrow <<- markrow+1;return(c(tm,markrow))})
apply(mat,1,function(x){tm <- grep("[a-z]",x);if(length(tm)==0){tm <- NA};markrow <<- markrow+1;return(c(tm,markrow))})
apply(mat,1,function(x){tm <- grep("[a-z]",x);if(length(tm)==0){tm <- NA};return(tm))})
apply(mat,1,function(x){tm <- grep("[a-z]",x);if(length(tm)==0){tm <- NA};return(tm)})
markers <- markers[!is.na(markers)]
markers <- apply(mat,1,function(x){tm <- grep("[a-z]",x);if(length(tm)==0){tm <- NA};return(tm)})
markers <- markers[!is.na(markers)]
markers
markerrows <- names(markers)
markerrows
markerrows <- as.numeric(names(markers))
markerrows <- as.numeric(names(markers))
markercols <- as.numeric(markers)
markercols
markers <- mat[markerrows,markercols]
markers
markers <- apply(mat,1,function(x){tm <- grep("[a-z]",x);if(length(tm)==0){tm <- NA};return(tm)})
markers <- markers[!is.na(markers)]
markerrows <- as.numeric(names(markers))
markercols <- as.numeric(markers)
stopifnot(length(markerrows)==length(markercols))
for(i in 1:length(markerrows)){
markers <- mat[markerrows[i],markercols[i]]
mat[markerrows[i],markercols[i]] <- 0
}
mat
markers
mat <- unsolved.matrix.metro14102016
mat
markers <- apply(mat,1,function(x){tm <- grep("[a-z]",x);if(length(tm)==0){tm <- NA};return(tm)})
markers <- markers[!is.na(markers)]
markerrows <- as.numeric(names(markers))
markercols <- as.numeric(markers)
stopifnot(length(markerrows)==length(markercols))
markers
stopifnot(length(markerrows)==length(markercols))
markerrows
markercols
markers <- apply(mat,1,function(x){tm <- grep("[a-z]",x);if(length(tm)==0){tm <- NA};return(tm)})
markers <- markers[!is.na(markers)]
markerrows <- as.numeric(names(markers))
markercols <- as.numeric(markers)
stopifnot(length(markerrows)==length(markercols))
i=1
names(markerrows)[i] <- mat[markerrows[i],markercols[i]]
names(markercols)[i] <- mat[markerrows[i],markercols[i]]
markerrows
for(i in 1:length(markerrows)){
names(markerrows)[i] <- mat[markerrows[i],markercols[i]]
names(markercols)[i] <- mat[markerrows[i],markercols[i]]
mat[markerrows[i],markercols[i]] <- 0
}
markerrows
markercols
markers
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=F)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=F)
mat
class(mat)
class(lapply(mat,class))
class(apply(mat,2,class))
apply(mat,2,class)
apply(mat,2,class)
as.matrix(lapply(mat,as.numeric))
as.matrix(apply(mat,2,as.numeric))
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=F)
mat <- as.matrix(apply(mat,2,as.numeric))
mat
markercols
markerrows
markers
!is.null(markers)
markans <- mat.or.vec(1,length(markerrows))
markans
names(markans) <- names(markercols)
markans
for(i in 1:length(markerrows)){
markans <- mat[markerrows[i],markercols[i]]
}
markans
markans
markans <- mat.or.vec(1,length(markerrows))
names(markans) <- names(markercols)
length(markerrows)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=F)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=F)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=F)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=F)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix.metro14102016,5000,acc=9,visualize=F)
Sudoku.Solve(unsolved.matrix3,5000,acc=9,visualize=F)
mat(unsolved.matrix3)
mat<-unsolved.matrix3
stopifnot((is.matrix(mat)||is.data.frame(mat)),ncol(mat)==nrow(mat),sqrt(ncol(mat))%%1==0)
is.data.frame(mat)
mat <- data.frame(mat)
markers <- apply(mat,1,function(x){tm <- grep("[a-z]",x);if(length(tm)==0){tm <- NA};return(tm)})
markers <- markers[!is.na(markers)]
markerrows <- as.numeric(names(markers))
markercols <- as.numeric(markers)
stopifnot(length(markerrows)==length(markercols))
for(i in 1:length(markerrows)){
names(markerrows)[i] <- mat[markerrows[i],markercols[i]]
names(markercols)[i] <- mat[markerrows[i],markercols[i]]
mat[markerrows[i],markercols[i]] <- 0
}
markers
is.null(markers)
length(markers)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(unsolved.matrix3,5000,acc=9,visualize=F)
us.mat6 <- edit(unsolved.matrix6)
us.mat6 <- data.frame(unsolved.matrix6)
us.mat6 <- edit(us.mat6)
us.mat6
us.mat6[1,2:4] <- c("a","z","y")
us.mat6
us.mat6[12,13] <- "bh"
Sudoku.Solve(us.mat6,5000,acc=9,visualize=F)
class(us.mat6)
us.mat6
is.matrix(us.mat6)
mat <- us.mat6
stopifnot((is.matrix(mat)||is.data.frame(mat)),ncol(mat)==nrow(mat),sqrt(ncol(mat))%%1==0)
is.data.frame(mat)
markers <- apply(mat,1,function(x){tm <- grep("[a-z]",x);if(length(tm)==0){tm <- NA};return(tm)})
markers <- markers[!is.na(markers)]
markerrows <- as.numeric(names(markers))
markercols <- as.numeric(markers)
markers
names(markers)
markers
markerrows
markercols <- as.numeric(unlist(markers))
markercols
markerrows <- as.numeric(rep(names(markers),lapply(markers,length)))
markerrows
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(us.mat6,5000,acc=9,visualize=F)
Sudoku.Solve(us.mat6,5000,acc=9,visualize=F)
Sudoku.Solve(us.mat6,5000,acc=16,visualize=F)
Sudoku.Solve(us.mat6,5000,acc=16,visualize=F)
Sudoku.Solve(us.mat6,5000,acc=16,visualize=T)
getTitle()
?getTitle
dev.cur()
dev=dev.cur()
dev
all_pointers <- getWindowsHandles(which="R", minimized=TRUE)
all_pointers <- sapply(all_pointers, deparse)
all_pointers
all_pointers
to_find
to_find <- deparse(getWindowsHandle(dev))
to_find
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/getDevTitle.r', echo=TRUE)
Sudoku.Solve(us.mat6,5000,acc=16,visualize=T)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(us.mat6,5000,acc=16,visualize=T)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(us.mat6,5000,acc=16,visualize=T)
source('C:/Users/54254tvb/Dropbox/Werk/Statistics, Methods and Programming/R/Sudoku/Sudoku.R', echo=TRUE)
Sudoku.Solve(us.mat6,5000,acc=16,visualize=T)
